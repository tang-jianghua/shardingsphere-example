spring.application.name=shardingsphere
server.port=80
server.servlet.context-path=/

#########################################mybatis#########################################
#mybatis-plus.configuration
#全局逻辑删除字段值 3.3.0开始支持，详情看下面。
#mybatis-plus.global-config.db-config.logic-delete-field=flag
# 逻辑已删除值(默认为 1)
#mybatis-plus.global-config.db-config.logic-delete-value=1
# 逻辑未删除值(默认为 0)
#mybatis-plus.global-config.db-config.logic-not-delete-value=0
mybatis-plus.mapper-locations=classpath:com/tangjianghua/shardingsphere/xml/*.xml

###############################################shardingsphere+druid############################################
spring.shardingsphere.datasource.names=bdc-master,bdc-slave,org-master,org-slave

spring.shardingsphere.datasource.bdc-master.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.bdc-master.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.bdc-master.url=jdbc:mysql://192.168.25.69:3306/bdc?characterEncoding=UTF8&useSSL=false
spring.shardingsphere.datasource.bdc-master.username=root
spring.shardingsphere.datasource.bdc-master.password=123456
spring.shardingsphere.datasource.bdc-master.initial-size=1
spring.shardingsphere.datasource.bdc-master.min-idle=1
spring.shardingsphere.datasource.bdc-master.max-active=20
spring.shardingsphere.datasource.bdc-master.max-wait=60000
spring.shardingsphere.datasource.bdc-master.time-between-eviction-runs-millis=60000
spring.shardingsphere.datasource.bdc-master.min-evictable-idle-time-millis=300000
spring.shardingsphere.datasource.bdc-master.remove-abandoned=true
spring.shardingsphere.datasource.bdc-master.remove-abandoned-timeout=5
spring.shardingsphere.datasource.bdc-master.validation-query=select 1
spring.shardingsphere.datasource.bdc-master.filters=stat,wall
spring.shardingsphere.datasource.bdc-master.test-while-idle=true
spring.shardingsphere.datasource.bdc-master.test-on-borrow=false
spring.shardingsphere.datasource.bdc-master.test-on-return=false
spring.shardingsphere.datasource.bdc-master.pool-prepared-statements=true
spring.shardingsphere.datasource.bdc-master.max-pool-prepared-statement-per-connection-size=20
spring.shardingsphere.datasource.bdc-master.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;druid.stat.logSlowSql=true
spring.shardingsphere.datasource.bdc-master.stat-view-servlet.enabled=true
spring.shardingsphere.datasource.bdc-master.stat-view-servlet.reset-enable=false
# 配置WallFilter
spring.shardingsphere.datasource.bdc-master.filter.wall.enabled=true
spring.shardingsphere.datasource.bdc-master.filter.wall.db-type=h2
spring.shardingsphere.datasource.bdc-master.filter.wall.config.delete-allow=false
spring.shardingsphere.datasource.bdc-master.filter.wall.config.drop-table-allow=false




spring.shardingsphere.datasource.bdc-slave.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.bdc-slave.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.bdc-slave.url=jdbc:mysql://192.168.25.70:3306/bdc?characterEncoding=UTF8&useSSL=false
spring.shardingsphere.datasource.bdc-slave.username=root
spring.shardingsphere.datasource.bdc-slave.password=123456
spring.shardingsphere.datasource.bdc-slave.initial-size=1
spring.shardingsphere.datasource.bdc-slave.min-idle=1
spring.shardingsphere.datasource.bdc-slave.max-active=20
spring.shardingsphere.datasource.bdc-slave.max-wait=60000
spring.shardingsphere.datasource.bdc-slave.time-between-eviction-runs-millis=60000
spring.shardingsphere.datasource.bdc-slave.min-evictable-idle-time-millis=300000
spring.shardingsphere.datasource.bdc-slave.remove-abandoned=true
spring.shardingsphere.datasource.bdc-slave.remove-abandoned-timeout=5
spring.shardingsphere.datasource.bdc-slave.validation-query=select 1
spring.shardingsphere.datasource.bdc-slave.filters=stat,wall
spring.shardingsphere.datasource.bdc-slave.test-while-idle=true
spring.shardingsphere.datasource.bdc-slave.test-on-borrow=false
spring.shardingsphere.datasource.bdc-slave.test-on-return=false
spring.shardingsphere.datasource.bdc-slave.pool-prepared-statements=true
spring.shardingsphere.datasource.bdc-slave.max-pool-prepared-statement-per-connection-size=20
spring.shardingsphere.datasource.bdc-slave.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;druid.stat.logSlowSql=true
spring.shardingsphere.datasource.bdc-slave.stat-view-servlet.enabled=true
spring.shardingsphere.datasource.bdc-slave.stat-view-servlet.reset-enable=false

spring.shardingsphere.datasource.org-master.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.org-master.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.org-master.url=jdbc:mysql://192.168.25.71:3306/orgdb?characterEncoding=UTF8&useSSL=false
spring.shardingsphere.datasource.org-master.username=root
spring.shardingsphere.datasource.org-master.password=123456
spring.shardingsphere.datasource.org-master.initial-size=1
spring.shardingsphere.datasource.org-master.min-idle=1
spring.shardingsphere.datasource.org-master.max-active=20
spring.shardingsphere.datasource.org-master.max-wait=60000
spring.shardingsphere.datasource.org-master.time-between-eviction-runs-millis=60000
spring.shardingsphere.datasource.org-master.min-evictable-idle-time-millis=300000
spring.shardingsphere.datasource.org-master.remove-abandoned=true
spring.shardingsphere.datasource.org-master.remove-abandoned-timeout=5
spring.shardingsphere.datasource.org-master.validation-query=select 1
spring.shardingsphere.datasource.org-master.filters=stat,wall
spring.shardingsphere.datasource.org-master.test-while-idle=true
spring.shardingsphere.datasource.org-master.test-on-borrow=false
spring.shardingsphere.datasource.org-master.test-on-return=false
spring.shardingsphere.datasource.org-master.pool-prepared-statements=true
spring.shardingsphere.datasource.org-master.max-pool-prepared-statement-per-connection-size=20
spring.shardingsphere.datasource.org-master.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;druid.stat.logSlowSql=true
spring.shardingsphere.datasource.org-master.stat-view-servlet.enabled=true
spring.shardingsphere.datasource.org-master.stat-view-servlet.reset-enable=false

spring.shardingsphere.datasource.org-slave.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.org-slave.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.org-slave.url=jdbc:mysql://192.168.25.72:3306/orgdb?characterEncoding=UTF8&useSSL=false
spring.shardingsphere.datasource.org-slave.username=root
spring.shardingsphere.datasource.org-slave.password=123456
spring.shardingsphere.datasource.org-slave.initial-size=1
spring.shardingsphere.datasource.org-slave.min-idle=1
spring.shardingsphere.datasource.org-slave.max-active=20
spring.shardingsphere.datasource.org-slave.max-wait=60000
spring.shardingsphere.datasource.org-slave.time-between-eviction-runs-millis=60000
spring.shardingsphere.datasource.org-slave.min-evictable-idle-time-millis=300000
spring.shardingsphere.datasource.org-slave.remove-abandoned=true
spring.shardingsphere.datasource.org-slave.remove-abandoned-timeout=5
spring.shardingsphere.datasource.org-slave.validation-query=select 1
spring.shardingsphere.datasource.org-slave.filters=stat,wall
spring.shardingsphere.datasource.org-slave.test-while-idle=true
spring.shardingsphere.datasource.org-slave.test-on-borrow=false
spring.shardingsphere.datasource.org-slave.test-on-return=false
spring.shardingsphere.datasource.org-slave.pool-prepared-statements=true
spring.shardingsphere.datasource.org-slave.max-pool-prepared-statement-per-connection-size=20
spring.shardingsphere.datasource.org-slave.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;druid.stat.logSlowSql=true
spring.shardingsphere.datasource.org-slave.stat-view-servlet.enabled=true
spring.shardingsphere.datasource.org-slave.stat-view-servlet.reset-enable=false

#######################################读写分离######################################################
#spring.shardingsphere.masterslave.name=ms
#spring.shardingsphere.masterslave.load-balance-algorithm-type=round_robin
#spring.shardingsphere.masterslave.master-data-source-name=bdc-master
#spring.shardingsphere.masterslave.slave-data-source-names=bdc-slave
#省略数据源配置，与数据分片一致

#######################bdc读写#######################
#主库数据源名称
spring.shardingsphere.sharding.master-slave-rules.bdc.master-data-source-name=bdc-master
#从库数据源名称列表
spring.shardingsphere.sharding.master-slave-rules.bdc.slave-data-source-names[0]=bdc-slave
#从库负载均衡算法类名称。该类需实现MasterSlaveLoadBalanceAlgorithm接口且提供无参数构造器
#spring.shardingsphere.sharding.master-slave-rules.<master-slave-data-source-name>.load-balance-algorithm-class-name=
#从库负载均衡算法类型，可选值：ROUND_ROBIN，RANDOM。若`load-balance-algorithm-class-name`存在则忽略该配置
spring.shardingsphere.sharding.master-slave-rules.bdc.load-balance-algorithm-type=ROUND_ROBIN
#######################org读写#######################
#主库数据源名称
spring.shardingsphere.sharding.master-slave-rules.org.master-data-source-name=org-master
#从库数据源名称列表
spring.shardingsphere.sharding.master-slave-rules.org.slave-data-source-names[0]=org-slave
#从库负载均衡算法类名称。该类需实现MasterSlaveLoadBalanceAlgorithm接口且提供无参数构造器
#spring.shardingsphere.sharding.master-slave-rules.<master-slave-data-source-name>.load-balance-algorithm-class-name=
#从库负载均衡算法类型，可选值：ROUND_ROBIN，RANDOM。若`load-balance-algorithm-class-name`存在则忽略该配置
spring.shardingsphere.sharding.master-slave-rules.org.load-balance-algorithm-type=ROUND_ROBIN
#工作线程数量，默认值: CPU核数
spring.shardingsphere.props.executor.size= 8
#是否在启动时检查分表元数据一致性，默认值: false
spring.shardingsphere.props.check.table.metadata.enabled=false
#######################################数据脱敏######################################################

#spring.shardingsphere.encrypt.encryptors.encryptor_aes.type=aes
#spring.shardingsphere.encrypt.encryptors.encryptor_aes.props.aes.key.value=123456
#spring.shardingsphere.encrypt.tables.merchant.columns.org_id.plainColumn=user_decrypt
#spring.shardingsphere.encrypt.tables.merchant.columns.org_id.cipherColumn=user_encrypt
#spring.shardingsphere.encrypt.tables.merchant.columns.org_id.assistedQueryColumn=user_assisted
#spring.shardingsphere.encrypt.tables.merchant.columns.org_id.encryptor=encryptor_aes

#是否开启SQL显示，默认值: false
spring.shardingsphere.props.sql.show=true
#spring.shardingsphere.props.query.with.cipher.column=true

################################广播表###################################################
spring.shardingsphere.sharding.broadcast-tables= test
#spring.shardingsphere.sharding.broadcast-tables[1]= #广播表规则列表
#spring.shardingsphere.sharding.broadcast-tables[x]= #广播表规则列表

#未配置分片规则的表将通过默认数据源定位
#spring.shardingsphere.sharding.default-data-source-name=
#默认数据库分片策略，同分库策略
#spring.shardingsphere.sharding.default-database-strategy.xxx=
#默认表分片策略，同分表策略
#spring.shardingsphere.sharding.default-table-strategy.xxx=
##默认自增列值生成器类型，缺省将使用org.apache.shardingsphere.core.keygen.generator.impl.SnowflakeKeyGenerator。可使用用户自定义的列值生成器或选择内置类型：SNOWFLAKE/UUID
#spring.shardingsphere.sharding.default-key-generator.type=SNOWFLAKE
#自增列值生成器属性配置, 比如SNOWFLAKE算法的worker.id与max.tolerate.time.difference.milliseconds
#spring.shardingsphere.sharding.default-key-generator.props.<property-name>=

########################################数据分片########################################################

#用于单分片键的标准分片场景
#分片列名称
#spring.shardingsphere.sharding.tables.t_order.database-strategy.standard.sharding-column=order_id
#精确分片算法类名称，用于=和IN。该类需实现PreciseShardingAlgorithm接口并提供无参数的构造器
#spring.shardingsphere.sharding.tables.t_order.database-strategy.standard.precise-algorithm-class-name=com.tangjianghua.shardingsphere.config.sharding.TimeShardingTableAlgorithm
#范围分片算法类名称，用于BETWEEN，可选。该类需实现RangeShardingAlgorithm接口并提供无参数的构造器
#spring.shardingsphere.sharding.tables.t_order.database-strategy.standard.range-algorithm-class-name=com.tangjianghua.shardingsphere.config.sharding.TimeRangeShardingAlgorithm

spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=bdc.t_order_$->{0..1}
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_$->{order_id % 2}
spring.shardingsphere.sharding.tables.t_order.key-generator.column=order_id
spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.t_order_item.actual-data-nodes=bdc.t_order_item_$->{0..1}
spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item_$->{order_id % 2}
#spring.shardingsphere.sharding.tables.t_order_item.key-generator.column=order_item_id
#spring.shardingsphere.sharding.tables.t_order_item.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.binding-tables=t_order,t_order_item

#spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=user_id
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=master$->{user_id % 2}

